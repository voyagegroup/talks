Backend with Go
Treasure 2022
Tags: go

Shinya Suzuki
Gopher at CARTA HOLDINGS
@Yangyang_pareto
https://github.com/shinya-ml

* はじめに

* アイスブレーク

ブレイクアウトルームに分かれて色々話しましょう

- 好きなプログラミング言語
- 好きなエディタ (宗教戦争はやめようね！！)
- Treasureの意気込みとか

* バックエンド講義の目標

APIの開発がいいかんじにできるようになる

いいかんじとは

- どこを触ればAPIが作れるのか勘所がわかる
- 考慮しなきゃいけないことがなんとなくわかる

* 講義の進め方

いくつか課題を用意したので、コードを書いてもらったり議論したりします

たくさんコードを書きましょう

積極的に質問しましょう

- 自力で解決できないことはきっとある
- 聞けずに手が止まってしまうのはもったいない

自分の考えはどんどん言っていきましょう

- そこから新たな発見があったり、議論が盛り上がるかもしれません
- 間違ってたとしても、それはそれで学びがあるので恐れずに

* 事前課題どうだった？

- 事前課題とかGoどうだった？を適当に聞く

* Go言語について

Goのいいところ

- シンプル
- 標準で欲しい物が揃っている (fmt, mod, build, test)

* Goに入ってはGoに従え

Goらしく書く

.link https://go.dev/doc/effective_go Effective Go
.link https://github.com/golang/go/wiki/CodeReviewComments Go Code Review Comments
.link https://github.com/golang/go/wiki/TestComments Go Test Comments

余裕があったら読んでみてください。

レビューしていく中で具体例を話せたら

* アーキテクチャ

ここは変えないなら去年の踏襲する

* 構成

ここもそう

* 適当なエンドポイントについて、コードを追ってみる

リクエストが来てからどういう流れでAPIがレスポンスを返すのか把握する

* Let's Go

* 課題1: 記事一覧を作成日時でソートできるようにしたい

- `GET/articles` で作成された記事一覧が取得できる
- SQLにORDER BY句を付け足して作成日時でソートできるようにする
- クエリパラメータで昇順か降順か選べるようにする

* 適当にブランチを切ってやってみよう

ブランチ名はなんでもいい

    $ git checkout -b your-name-kadai-1

PRを作る、誰のどの課題かがわかるようなPR名にしてくれると嬉しい

- 課題1 yanyanとか

* PRを見ていく

* 課題2: 記事詳細を取ってくる際にコメントも取れるようにしたい

- `GET/articles/{article_id}` で記事の詳細が取ってこれる
- 一緒にその記事についてるコメントも取れるようにしたい

* 課題3: 記事にタグを付けたい

GoでAPI書きました！！みたいな記事ならGo, WebAPIみたいなタグをつける的な

- タグを作る
- 記事にタグを付ける
- 関連する（= 同じタグがついてる）記事をもってくる

一気にやるのはむずいので、段階的に作っていく

* 課題3.1: タグを作成できるようにしたい

- あらかじめ作成されたタグだけ記事につけれることにする
- タグの作成と作成されたタグが一覧できるようにする

* PRを見ていく

* 課題3.2: 記事にタグを付けれるようにしたい

- 3.1で作ったタグを記事作成時に記事と紐付けれるようにしたい


* PRを見ていく

* 課題3.3: 記事詳細取得時に同じタグをもつ記事の情報も取ってこれるようにしたい

- QiitaやZennとかにある、関連する記事のレコメンド的な機能

* PRを見ていく

* コラム: PRの粒度

- クソデカPRはやめようね！！といういい話をする

* コラム: おすすめ本 (amazon urlつける)

- Clean Architecture
- Web API: The Good Parts
- デザインパターン入門
- A Philosophy of Software Design
